name: CI/CD Pipeline

on:
  [workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4      

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          # cache-dependency-path: frontend/pnpm-lock.yaml
          node-version: 22
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm
        # uses: pnpm/action-setup@v4
        # with:
        #   version: 10
      
      - name: "Install Frontend Dependencies"
        run: pnpm i
        working-directory: frontend

      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 22
      #     cache: 'pnpm'

      # - name: Install pnpm
      #   run: npm install -g pnpm

      - name: Test Frontend Code
        run: pnpm test
        working-directory: frontend

      # - name: Test Backend Code
      #   run: |
      #     cd backend
      #     pnpm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm
        # uses: pnpm/action-setup@v4
        # with:
        #   version: 10     

      - name: "Install Frontend Dependencies"
        run: pnpm i
        working-directory: frontend
      
      - name: "Install Backend Dependencies"
        run: pnpm i
        working-directory: backend

      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 22
      #     cache: 'pnpm'

      # - name: Install pnpm
      #   run: npm install -g pnpm
      
      - name: Build Frontend
        run: |
          cd frontend
          pnpm build
        
      - name: Build Backend
        run: |
          cd backend
          pnpm build

      - name: Build Frontend Image
        run: |
          cd frontend
          docker build -t ${{ secrets.DOCKERHUB_USER }}/devops-demo:frontend .

      - name: Build Backend Image
        run: |
          cd backend
          docker build -t ${{ secrets.DOCKERHUB_USER }}/devops-demo:backend .

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        # run: echo ${{ secrets.DOCKERHUB_PW }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_PW }}

      - name: Push Frontend Image To DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USER }}/devops-demo:frontend

      - name: Push Backend Image To DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USER }}/devops-demo:backend

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: push
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Deploy to Production
  #       run: |
  #         docker-compose -f docker-compose.prod.yml pull
  #         docker-compose -f docker-compose.prod.yml up -d